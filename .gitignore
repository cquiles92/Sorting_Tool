# Project exclude paths
/.gradle/
/Sorting Tool/task/build/
/Sorting Tool/task/out/production/classes/
/Sorting Tool/task/out/test/classes/
/Topics/Anonymous classes/An anonymous class with three methods/out/
/Topics/Anonymous classes/An anonymous class with three methods/out/production/classes/
/Topics/Anonymous classes/And always these rules/out/
/Topics/Anonymous classes/And always these rules/out/production/classes/
/Topics/Anonymous classes/Capture variables/out/
/Topics/Anonymous classes/Capture variables/out/production/classes/
/Topics/Anonymous classes/Find a correct syntax/out/
/Topics/Anonymous classes/Find a correct syntax/out/production/classes/
/Topics/Anonymous classes/Implement Runnable/out/
/Topics/Anonymous classes/Implement Runnable/out/production/classes/
/Topics/Anonymous classes/Single method/out/
/Topics/Anonymous classes/Single method/out/production/classes/
/Topics/Anonymous classes/String reverser/out/
/Topics/Anonymous classes/String reverser/out/production/classes/
/Topics/Anonymous classes/Theory/out/
/Topics/Anonymous classes/Theory/out/production/classes/
/Topics/Anonymous classes/What about context/out/
/Topics/Anonymous classes/What about context/out/production/classes/
/Topics/Comparator/Comparing numbers/out/
/Topics/Comparator/Comparing numbers/out/production/classes/
/Topics/Comparator/Comparing values/out/
/Topics/Comparator/Comparing values/out/production/classes/
/Topics/Comparator/Method name/out/
/Topics/Comparator/Method name/out/production/classes/
/Topics/Comparator/Most valuable items/out/
/Topics/Comparator/Most valuable items/out/production/classes/
/Topics/Comparator/Multiple fields/out/
/Topics/Comparator/Multiple fields/out/production/classes/
/Topics/Comparator/Non-abstract methods/out/
/Topics/Comparator/Non-abstract methods/out/production/classes/
/Topics/Comparator/Odd and even/out/
/Topics/Comparator/Odd and even/out/production/classes/
/Topics/Comparator/Reverse sorting/out/
/Topics/Comparator/Reverse sorting/out/production/classes/
/Topics/Comparator/Sort users/out/
/Topics/Comparator/Sort users/out/production/classes/
/Topics/Comparator/Theory/out/
/Topics/Comparator/Theory/out/production/classes/
/Topics/Functional interfaces/A lambda expression with seven arguments/out/
/Topics/Functional interfaces/A lambda expression with seven arguments/out/production/classes/
/Topics/Functional interfaces/A string operator/out/
/Topics/Functional interfaces/A string operator/out/production/classes/
/Topics/Functional interfaces/Abstract built-in classes/out/
/Topics/Functional interfaces/Abstract built-in classes/out/production/classes/
/Topics/Functional interfaces/An invalid way to create a functional interface/out/
/Topics/Functional interfaces/An invalid way to create a functional interface/out/production/classes/
/Topics/Functional interfaces/Built-in classes/out/
/Topics/Functional interfaces/Built-in classes/out/production/classes/
/Topics/Functional interfaces/Statements/out/
/Topics/Functional interfaces/Statements/out/production/classes/
/Topics/Functional interfaces/Ternary predicate/out/
/Topics/Functional interfaces/Ternary predicate/out/production/classes/
/Topics/Functional interfaces/The requirement/out/
/Topics/Functional interfaces/The requirement/out/production/classes/
/Topics/Functional interfaces/Theory/out/
/Topics/Functional interfaces/Theory/out/production/classes/
/Topics/Lambda expressions/Apply function to all elements/out/
/Topics/Lambda expressions/Apply function to all elements/out/production/classes/
/Topics/Lambda expressions/Creating a closure/out/
/Topics/Lambda expressions/Creating a closure/out/production/classes/
/Topics/Lambda expressions/Expression closure/out/
/Topics/Lambda expressions/Expression closure/out/production/classes/
/Topics/Lambda expressions/Expressions/out/
/Topics/Lambda expressions/Expressions/out/production/classes/
/Topics/Lambda expressions/Higher-order functions/out/
/Topics/Lambda expressions/Higher-order functions/out/production/classes/
/Topics/Lambda expressions/Max of two integers/out/
/Topics/Lambda expressions/Max of two integers/out/production/classes/
/Topics/Lambda expressions/Next even number/out/
/Topics/Lambda expressions/Next even number/out/production/classes/
/Topics/Lambda expressions/Parts of code/out/
/Topics/Lambda expressions/Parts of code/out/production/classes/
/Topics/Lambda expressions/Production of all numbers in the range/out/
/Topics/Lambda expressions/Production of all numbers in the range/out/production/classes/
/Topics/Lambda expressions/Statements/out/
/Topics/Lambda expressions/Statements/out/production/classes/
/Topics/Lambda expressions/Theory/out/
/Topics/Lambda expressions/Theory/out/production/classes/
/Topics/Method references/All correct method references/out/
/Topics/Method references/All correct method references/out/production/classes/
/Topics/Method references/Ascending and descending sorting/out/
/Topics/Method references/Ascending and descending sorting/out/production/classes/
/Topics/Method references/Getting fields of classes/out/
/Topics/Method references/Getting fields of classes/out/production/classes/
/Topics/Method references/Replace the lambda expression with a method reference/out/
/Topics/Method references/Replace the lambda expression with a method reference/out/production/classes/
/Topics/Method references/Syntax of method references/out/
/Topics/Method references/Syntax of method references/out/production/classes/
/Topics/Method references/Theory/out/
/Topics/Method references/Theory/out/production/classes/